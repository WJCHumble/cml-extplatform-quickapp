<template>
  <view class="scroller-wrap">
    <!-- props testcase -->
    <text style="{{inlineStyle}}" class="{{show ? 'cls1' : 'cls2'}}">props test => {{xxx}}</text>
    <!-- c-show -->
    <text c-show="{{show}}">c-show => {{message}}</text>
    <!-- c-if c-else -->
    <text c-if="{{type === 'A'}}">
      c-if => A
    </text>
    <text c-else-if="{{type === 'B'}}">
      c-else-if => B
    </text>
    <text c-else-if="{{type === 'C'}}">
      C-else-if => C
    </text>
    <text c-else>
      c-else => Not A/B/C
    </text>
    <!-- c-text -->
    <view c-text="c-text" class="red-text" style="color: blue"></view>
    <!-- c-for -->
    <!-- <view class="sample-class" c-for="{{array}}">
      <text> only c-for => {{index}}: {{item.city}}</text>
    </view>
    <view class="sample-class" c-for="{{array}}" c-for-index="idx">
      <text> c-for & c-for-index => {{idx}}: {{item.city}}</text>
    </view>
    <view class="sample-class" c-for="{{array}}" c-for-index="idx" c-for-item="itemName">
      <text> c-for & c-for-index & c-for-item => {{idx}}: {{itemName.city}}</text>
    </view> -->
    <!-- more than one c-for -->
    <view class="sample-class" c-for-index="index" c-for-item="item" c-for="{{list}}">
      <text> c-for => {{index}}: {{item.name}}</text>
    </view>
    <!-- <view c-for="{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}" c-for-item="i">
      <view c-for="{{[1, 2, 3, 4, 5, 6, 7, 8, 9]}}" c-for-item="j">
        <view c-if="{{i <= j}}">
          <text> {{i}} * {{j}} = {{i * j}}</text>
        </view>
      </view>
    </view> -->
  </view>
</template>

<script>
  class PluginCom {
    data() {
      return {
        message: "Hello Chameleon!",
        show: true,
        inlineStyle: 'color: yellow',
        type: 'BC',
        list: [{
          name: 'lucida'
        }, {
          name: 'chenlei'
        }, {
          name: 'leilei'
        }],
        array: [{
            city: "北京"
          },
          {
            city: "上海"
          },
          {
            city: "广州"
          }
        ],
        showlist: true
      }
    }

    computed = {
      message2: function () {
        return "computed => " + this.message;
      }
    };
  }

  export default new PluginCom();
</script>
<style>
  .scroller-wrap {
    display: flex;
    flex-direction: column;
    align-items: center;
  }

  .class1 {
    width: 500cpx;
    height: 500cpx;
    background-image: url('../../assets/images/chameleon.png');
    background-repeat: no-repeat;
    background-size: 500cpx 500cpx;
  }

  .red-text {
    color: red;
  }
</style>
<script cml-type="json">
  {
    "base": {
      "usingComponents": {}
    }
  }
</script>