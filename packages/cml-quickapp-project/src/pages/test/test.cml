<template>
  <view>
    <view><text>a: {{a}}---</text></view>
    <view><text>computedA: {{computedA}}----</text></view>
    <view><text>b: {{b}}----</text></view>
    <view><text>login.phone: {{login.phone}}---</text></view>
    <view><text>message: {{message}}---</text></view>
    <input placeholder="input content" value="{{title}}" c-bind:input="change"></input>
  </view>
</template>

<script>
  import store from '../../store'
  const {
    mapState,
    mapMutations,
    mapActions,
    mapGetters
  } = store

  class Home {
    data = {
      a: 'default a',
      title: '',
      b: ''
    }

    computed = {
      ...mapState(['login']),
      computedA() {
        console.log('##### a has been computed')
        return this.a + ' computed'
      },
      // computedB() {
      //   console.log('##### b has been computed')
      //   return this.b
      // },
      message() {
        console.log('##### message has been computed')
        return 'message ' + this.title
      }
    }

    watch = {
      login(n, o) {
        console.log('login change:', n)
      },
      title() {
        console.log('##### title has been watched, title = ', this.title)
      },
      a() {
        console.log('##### a has been watched, this.a = ', this.a)
      },
      b() {
        console.log('####### b has been watched,  b = ', this.b)
      }
    }
    methods = {
      ...mapMutations(['changeLogin']),
      change(e) {
        this.title = e.detail.value
      }
    }
    mounted() {
      this.$watch('login', function (v) {
        console.log('this.$watch login changeï¼š', v)
      })

      setTimeout(() => {
        console.log('-------- store.login', store.state.login)
        console.log('-------- this.login', this.login)

        this.a = "change a "
        this.b = 'change b'
        this.title = 'changed title';

        this.changeLogin({
          phone: '12132'
        })

        console.log('--------- after store.login', store.state.login)
        console.log('--------- after this.login', this.login)

      }, 2000)
    }
  }
  export default new Home();
</script>

<style scoped>

</style>


<script cml-type="json">
  {
    "base": {
      "usingComponents": {},
      "navigationBarTitleText": "Chameleon Demos",
      "backgroundTextStyle": "dark",
      "backgroundColor": "#F0F2F7"
    }
  }
</script>